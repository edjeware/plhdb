dnl Copyright (C) 2016 The Meme Factory, Inc., http://www.meme.com/
dnl
dnl    This file is part of PLHDB.
dnl
dnl    PLHDB is free software; you can redistribute it and/or modify
dnl    it under the terms of the GNU General Public License as published by
dnl    the Free Software Foundation; either version 3 of the License, or
dnl    (at your option) any later version.
dnl
dnl    This program is distributed in the hope that it will be useful,
dnl    but WITHOUT ANY WARRANTY; without even the implied warranty of
dnl    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
dnl    GNU General Public License for more details.
dnl
dnl    You should have received a copy of the GNU General Public License
dnl    along with PLHDB.  If not, see <http://www.gnu.org/licenses/>.
dnl
dnl Karl O. Pinc <kop@meme.com>
dnl

dnl m4 includes
include(`copyright.m4')dnl
include(`constants.m4')dnl
include(`macros.m4')dnl


dnl plpgsql fragment for BLAH
dnl
dnl Syntax: BLAH(ARG)
dnl
dnl ARG   description
dnl
changequote({,})
define({BLAH},{
})dnl
changequote(`,')dnl

--  
-- template
--
SELECT 'template' AS table;

SELECT 'template_func' AS function;
CREATE FUNCTION template_func ()
  RETURNS trigger
  LANGUAGE plpgsql
  plh_function_set_search_path
  AS $$
  BEGIN
  -- Function for template insert and update triggers
  --
  -- GPL_notice(`  --', `2016', `The Meme Factory, Inc., http://www.meme.com/')

  RETURN NULL;
  END;
$$;


SELECT 'template_delete_func' AS function;
CREATE FUNCTION template_delete_func ()
  RETURNS trigger
  LANGUAGE plpgsql
  SECURITY DEFINER
  plh_function_set_search_path
  AS $$
  -- Function for template delete trigger
  --
  -- GPL_notice(`  --', `2016', `The Meme Factory, Inc., http://www.meme.com/')

  DECLARE

  BEGIN

  RETURN NULL;
  END;
$$;

SELECT 'template_commit_func' AS function;
CREATE OR REPLACE FUNCTION template_commit_func()
  RETURNS trigger
  LANGUAGE plpgsql
  plh_function_set_search_path
  AS $$
  -- Function for template insert and update fired upon transaction commit.
  --
  -- GPL_notice(`  --', `2016', `The Meme Factory, Inc.  http://www.meme.com/')
  --
  BEGIN

  -- Get the latest values of the row
  SELECT * INTO NEW FROM template WHERE template.id = NEW.id;
  IF NOT FOUND THEN
    -- Whatever row was inserted was subsequently deleted.
    -- Nothing to do.
    RETURN NULL;
  END IF;

  RETURN NULL;
  END;
$$;


SELECT 'template_trigger' AS trigger;
CREATE TRIGGER template_trigger
  AFTER INSERT OR UPDATE
  ON template FOR EACH ROW
  EXECUTE PROCEDURE template_func();

SELECT 'template_delete_trigger' AS trigger;
CREATE TRIGGER template_delete_trigger
  AFTER DELETE
  ON template FOR EACH ROW
  EXECUTE PROCEDURE template_delete_func();

SELECT 'template_commit_trigger' AS trigger;
CREATE CONSTRAINT TRIGGER template_commit_trigger
  AFTER INSERT OR UPDATE
  ON template
  DEFERRABLE INITIALLY DEFERRED
  FOR EACH ROW
  EXECUTE PROCEDURE template_commit_func();
